% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mycsfit.R
\name{mycsfit}
\alias{mycsfit}
\title{Title}
\usage{
mycsfit(cc, G, logRm = FALSE, logBase = 2)
}
\arguments{
\item{cc}{A numeric matrix or data frame representing cell type proportions for each sample.
Rows correspond to cell types, and columns correspond to samples.}

\item{G}{A numeric matrix or data frame representing the gene expression data, where rows correspond to genes and columns to samples.}

\item{logRm}{A logical value indicating whether to apply a log transformation to the gene expression data. Default is \code{FALSE}.}

\item{logBase}{The base of the logarithm to use if \code{logRm} is \code{TRUE}. Default is 2 (log base 2).}
}
\value{
A list of class \code{csfit} containing the following components:
\itemize{
\item \code{ghat}: A numeric matrix of the fitted coefficients for each cell type and gene.
\item \code{residuals}: A numeric matrix of the residuals from the regression for each gene and sample.
\item \code{se}: A numeric matrix of the standard errors for the fitted coefficients.
\item \code{n}: The number of samples in the gene expression data \code{G}.
}
}
\description{
#' Fit a Linear Model to Cell Type Proportions
}
\details{
This function fits a linear model to cell type proportions (\code{cc}) and gene expression data (\code{G}),
using least squares regression. The function allows for optional log-transformation of the gene expression data
and provides the fitted coefficients, residuals, standard errors, and other related statistics.
}
\examples{
# Example usage of mycsfit
cc <- matrix(runif(100), nrow = 10, ncol = 10)  # Example cell type proportions (10 cell types x 10 samples)
G <- matrix(rnorm(1000), nrow = 100, ncol = 10)  # Example gene expression matrix (100 genes x 10 samples)
result <- mycsfit(cc, G)
print(result$ghat)
}
